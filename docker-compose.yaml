version: '2.4'

networks:
    default:
        # pimcorenet:
        driver: bridge

services:
    redis:
        image: redis:alpine
        restart: always
        command: [ redis-server, --maxmemory, 128mb, --maxmemory-policy, volatile-lru, --save, '""' ]

    db:
        image: mariadb:10.11
        working_dir: /application
        restart: always
        ports:
            - 3002:3306
        command: [ mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb-file-per-table=1 ]
        volumes:
            - ${HOME}/data/pimcore-gw-dev/mysql:/var/lib/mysql:delegated
            # - pimcore-demo-database:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ROOT
            MYSQL_DATABASE: pimcore
            MYSQL_USER: pimcore
            MYSQL_PASSWORD: pimcore
        healthcheck:
            # The service is considered healthy when:
            # - connection to pimcore db can be established, and
            # - we can run a simple SQL query.
            test: [ "CMD-SHELL", "mysql -h db -u$$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE -e 'SHOW TABLES;'" ]
            interval: 10s
            retries: 6
            start_period: 1m
            timeout: 3s

    postgres:
        image: postgres:latest
        environment:
            POSTGRES_USER: pimcore
            POSTGRES_PASSWORD: pimcore
            POSTGRES_DB: pimcore
        ports:
            - "5432:5432"
        volumes:
            - ${HOME}/data/pimcore-gw-dev/postgresql:/var/lib/postgresql/data

    nginx:
        image: nginx:stable-alpine
        restart: always
        ports:
            - "8073:80"
        volumes:
            - .:/var/www/html:ro
            - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - php
        extra_hosts:
            - "pimcore-gw-dev.iwis.io:192.168.166.62"

    php:
        user: '1000:1000' # set to your uid:gid
        # image: pimcore/pimcore:php8.2-debug-latest
        image: ${COMPOSE_PROJECT_NAME}:${TAG:-latest}
        build:
            context: ${BASE_ENV_DIR}/docker
            # target: app-dev
            # args:
            #   # To authenticate to private registry either use username / password, or Oauth key/secret / etc
            #   # Please add Composer Auth JSON Object
            #   COMPOSER_AUTH: "{}"
            #   NEW_UID: ${NEW_UID:-1000}
            #   COMPOSER_VERSION: ${COMPOSER_VERSION:-2.0}
        restart: always
        environment:
            COMPOSER_HOME: /var/www/html
            PHP_IDE_CONFIG: serverName=localhost
            # Feed installer configuration via ENV variables.
            # See: https://pimcore.com/docs/pimcore/current/Development_Documentation/Getting_Started/Advanced_Installation_Topics.html#page_Advanced-Installation-Topics
            PIMCORE_INSTALL_MYSQL_USERNAME: pimcore
            PIMCORE_INSTALL_MYSQL_PASSWORD: pimcore
            PIMCORE_INSTALL_MYSQL_PORT: 3306
            PIMCORE_INSTALL_MYSQL_HOST_SOCKET: db
            PIMCORE_INSTALL_MYSQL_DATABASE: pimcore
        depends_on:
            # - db
            db:
                condition: service_healthy
        volumes:
            - .:/var/www/html:delegated
        extra_hosts:
            - "pimcore-gw-dev.iwis.io:192.168.166.62"

    supervisord:
        user: '1000:1000' # set to your uid:gid
        restart: always
        build:
            context: ${BASE_ENV_DIR}/docker/supervisord
        depends_on:
            # - db
            db:
                condition: service_healthy
        volumes:
            - .:/var/www/html
            - ./.docker/supervisord.conf:/etc/supervisor/conf.d/pimcore.conf:ro
        extra_hosts:
            - "pimcore-gw-dev.iwis.io:192.168.166.62"

    #chrome:
       # image: browserless/chrome
       ## restart: always
       # extra_hosts:
        #    - "pimcore-gw-dev.iwis.io:192.168.166.62"

   # gotenberg:
    #    image: gotenberg/gotenberg:7
     #   restart: always
       # extra_hosts:
       #     - "pimcore-gw-dev.iwis.io:192.168.166.62"

    rabbitmq:
        image: rabbitmq:3.8.2-management
        hostname: rabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
        environment:
            RABBITMQ_DEFAULT_USER: "guest"
            RABBITMQ_DEFAULT_PASS: "guest"
            RABBITMQ_DEFAULT_VHOST: "/"

    # db-backup:
    #   image: alpine
    #   restart: "no"
    #   tty: false
    #   environment:
    #     - TARGET=dbdata
    #   volumes:
    #     - ${HOME}/backup:/backup
    #     - pimcore-demo-database:/volume
    #   command: sh -c "tar -cjf /backup/$${TARGET}.tar.bz2 -C /volume ./"

    # db-restore:
    #   image: alpine
    #   restart: "no"
    #   environment:
    #     - SOURCE=dbdata
    #   volumes:
    #     - ${HOME}/backup:/backup
    #     - pimcore-demo-database:/volume
    #   command: sh -c "rm -rf /volume/* /volume/..?* /volume/.[!.]* ; tar -C /volume/ -xjf /backup/$${SOURCE}.tar.bz2"

# volumes:
#   pimcore-demo-database:
