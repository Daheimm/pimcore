TAG=latest

COMPOSE_PROJECT_NAME=pimcore-gw-dev
PORT=3000
PUBLIC_PORT=3000
CLUSTER_NAME=local
# IMAGE_REPO=ghcr.io/grengojboF
IMAGE_REPO=gitlab.iwis.com.ua:4567
IMAGE_TAG=latest
BULDER_IMAGE_TAG=latest
# https://github.com/GoogleContainerTools/distroless
BASE_IMAGE_TAG=nonroot
# BASE_IMAGE_TAG=debug-nonroot

#BASE_URL=https://admin.naz-dev.a.iwis.io

# K8S_NAMESPACE=kuard-dev
#DOCKER_REGISTRY=
#AWS_DEFAULT_REGION=eu-west-1

# NEW_USER=ubuntu
# NEW_UID=502
# NEW_GID=20
NEW_UID=1001
# NEW_GID=0
# BASE_DATA_DIR=./data/mysql
# BASE_APP_PATH=/opt/data/home/user/google-events/src
BASE_APP_PATH=/home/anton/pimcore-gw-dev
BASE_DATA_DIR=/home/anton/data/pimcore-gw-dev
BASE_ENV_DIR=/home/anton/pimcore-gw-dev/.stack
PG_BACKUP_FILE=/opt/data/backup/file.dump

# DOCKER_COMPOSE_CMD="docker"
DOCKER_COMPOSE_CMD="docker-compose"
# DOCKER_COMPOSE_CMD="podman"
DOCKER_COMPOSE_FILE="docker-compose.yml"

## load Dockerfile for build framework
BUILD_FRAMEWORK=golang

MODE=dev
DEBUG_ENTRYPOINT=1
DOCKER_LOGS=1
DOCKERLOGS=1
DOCKER_BUILDKIT=1
DOCKER_COMPOSE_BUILD_START=""
# DOCKER_COMPOSE_BUILD_START="--build "
DOCKER_RESTART_STRATEGE=always

# COMPOSER_VERSION=2.0
COMPOSER_VERSION=1.10

# DRY_RUN=yes

## WERF ENV
# WERF_ENABLED=yes
##WERF_APP_DOCKER_IMAGE_NAME=sf-devino-viber:2b1d3666dcd468b31c98b9604c25ff97b64b39320572bb1a6124bc61-1635242665314
##WERF_SF_DEVINO_VIBER_DOCKER_IMAGE_NAME=sf-devino-viber:2b1d3666dcd468b31c98b9604c25ff97b64b39320572bb1a6124bc61-1635242665314
# WERF_DRY_RUN=true # Indicate what the command would do without actually doing that (default $WERF_DRY_RUN
# Enable development mode (default $WERF_DEV).
WERF_DEV=true
# WERF_LOG_DEBUG=true
# WERF_LOG_VERBOSE=true
# WERF_FOLLOW. Команда перезапускается при появлении новых commit’ов. А при использовании совместно с реимом WERF_DEV — при любых изменениях.
#WERF_DISABLE_AUTO_HOST_CLEANUP=true # Disable auto host cleanup procedure in main werf commands like werf-build, werf-converge and other (default disabled or 

# K3D_ENABLED=true

# https://app.pulumi.com/account/tokens
# PULUMI_ACCESS_TOKEN=

# GITHUB_TOKEN=
# GITLAB_TOKEN=

# Enable AWS S3 backend
# RESTIC_REPOSITORY=s3:https://s3.amazonaws.com/<backupBacket>
# RESTIC_PASSWORD=<passwordRestic>
# RESTIC_RESTORE_DB_BASE=~/tmp
# RESTIC_RESTORE_DB_PATH=<db-prod>


# https://www.pulumi.com/docs/get-started/aws/begin/
# AWS_ACCESS_KEY_ID=<YOUR_ACCESS_KEY_ID>
# AWS_SECRET_ACCESS_KEY=<YOUR_SECRET_ACCESS_KEY>
# AWS_DEFAULT_REGION=eu-west-2

# https://www.pulumi.com/docs/intro/cloud-providers/hcloud/setup/
# HCLOUD_TOKEN=XXXXXXXXXXXXXX

# https://www.pulumi.com/docs/intro/cloud-providers/azure/setup/
# Azure Stack https://www.pulumi.com/docs/reference/pkg/azure-native/azurestack/registration/
# ARM_CLIENT_ID="WWWWWWWW-WWWW-WWWW-WWWW-WWWWWWWWWWWW"
# ARM_CLIENT_SECRET="XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
# ARM_TENANT_ID="YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY"
# ARM_SUBSCRIPTION_ID="ZZZZZZZZ-ZZZZ-ZZZZ-ZZZZ-ZZZZZZZZZZZZ"

# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=true
PIMCORE_DEV_MODE=false

#TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
#TRUSTED_HOSTS='^(localhost|example\.com)$'
###< symfony/framework-bundle ###

###> php-amqplib/rabbitmq-bundle ###
RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
MESSENGER_EVENTS_DSN=amqp://guest:guest@rabbitmq:5672
###< php-amqplib/rabbitmq-bundle ###
